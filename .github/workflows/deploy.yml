name: Deploy

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Create requirements.txt if missing
      run: |
        cd fullstack-assignment-main/backend
        if [ ! -f requirements.txt ]; then
          echo "Creating requirements.txt"
          pip freeze > requirements.txt
        fi

    - name: Install Python dependencies
      run: |
        cd fullstack-assignment-main/backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt || { echo "Failed to install dependencies"; exit 1; }

         - name: Create and activate virtual environment
             run: |
            cd fullstack-assignment-main/backend
            python3 -m venv venv
            source venv/bin/activate
            python --version
            pip --version
            python manage.py collectstatic --noinput
            python manage.py makemigrations
            python manage.py migrate
            pip install gunicorn
          shell: /usr/bin/bash -e {0}


        
    - name: Configure Nginx
      run: |
        sudo sed -i '/^server_names_hash_bucket_size/d' /etc/nginx/nginx.conf
        echo 'server_names_hash_bucket_size 128;' | sudo tee -a /etc/nginx/nginx.conf
        sudo tee /etc/nginx/sites-available/django <<EOF
        server {
            listen 80;
            server_name ec2-51-20-193-131.eu-north-1.compute.amazonaws.com;
            location / {
                proxy_pass http://127.0.0.1:8000;
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$scheme;
            }
        }
        EOF
        sudo ln -s /etc/nginx/sites-available/django /etc/nginx/sites-enabled/
        sudo nginx -t
        sudo systemctl reload nginx

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install Next.js dependencies and build
      run: |
        cd fullstack-assignment-main/frontend
        npm install
        npm run build

    - name: Deploy to server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
      run: |
        mkdir -p ~/.ssh
        echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

        ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ec2-user@$SERVER_IP << 'EOF'
        if [ ! -d "fullstack-assignment" ]; then
          git clone https://github.com/soulpage/fullstack-assignment.git
        fi
        cd fullstack-assignment
        git pull origin main

        # Backend setup
        cd backend
        python3 -m venv venv || python3 -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        python manage.py collectstatic --noinput
        python manage.py migrate
        python manage.py makemigrations

        # Frontend setup
        cd ../frontend
        npm install
        npm run build

        # Restart Nginx
        sudo systemctl restart nginx
        EOF
